'use strict';

////////////////////////////////////////////////////////
//////////////////////////////////////////////////////// Function
////////////////////////////////////////////////////////
//
//
// defaulte parametr
//

// defaulte paremetr in function (
//   flyNumber,
//   passangerNum = 1,                // –ï—Å–ª–∏ –ø—Ä–∏ –≤—â—è—Ç–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –ø–∞—Ä–∞–º–µ—Ç—Ä –æ–∫–∞–∂–µ—Ç—å—Å—è –ø—É—Å—Ç—ã–º —Ç–æ –æ–Ω –ø—Ä–∏–Ω–µ–º–∞–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
//   price = 199 * passangerNum       // —Ç–∞–∫ –∂–µ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–æ–¥–∏—Ç —Ä–∞—Å—á–µ—Ç—ã (–Ω–æ —Ç–æ–ª—å–∫–æ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∫–æ—Ç–æ—Ä—ã–µ —É–∫–∞–∑–∞–Ω—ã –≤ –ø–µ—Ä–µ–º–µ—Ç—Ä–∞—Ö —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–¥)
// )

// const bookings = [];

// const createBookimg = function (
//   flyNumber,
//   passangerNum = 1,
//   price = 199 * passangerNum
// ) {
//   const booking = {
//     flyNumber,
//     passangerNum,
//     price,
//   };
//   console.log(booking);
//   bookings.push(booking);
// };

// createBookimg('LH123');

////////////////////////////////////////////////////////
//////////////////////////////////////////////////////// How passing the arrguments :
////////////////////////////////////////////////////////
//
//
// Value vs Reference
//

// const fly = 'LH134';

// const eliasz = {
//   name: 'Eliasz',
//   passport: '31432332',
// };

// const checkIn = function (flyNumber, passenger) {
//   flyNumber = 'Lh999';
//   passenger.name = 'Mr.' + passenger.name;

//   if (passenger.passport === 31432332) {
//     alert('Welcom on a board');
//   } else {
//     alert('üëÆ‚Äç‚ôÇÔ∏è');
//   }
// };

//
// When we call the object or variable inside a function like a parametr we make a reference of this.
// Its like a link to the object/Array where function can get the information abou
//
//–≤—Å–µ —ç—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏ –∏–∑–∑–∞ —Ç–æ–≥–æ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–∞–º—è—Ç—å HEAP –º—ã –Ω–µ –¥–µ–ª–∞–µ–º –Ω–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∞ –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞–µ–º –µ—â–µ –æ–¥–∏–Ω –ª–∏–Ω–∫ –∫ –Ω–µ–π

// –ò–∑–º–µ–Ω–µ–Ω–∏—è Object/Array –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–≤–ª–µ—á–µ—Ç –∑–∞ —Å–æ–±–æ–π –∏–∑–º–µ–Ω–µ–Ω—è—é –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ Object/Array
// –ù–æ —ç—Ç–æ –Ω–µ –ø–æ–≤–ª–∏—è–µ—Ç –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ typeOf (boolean , pirmetiv , number ect)
// checkIn(fly, eliasz);

// console.log(fly);
// console.log(eliasz);

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// –ö–∞–∫ –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º —Å –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ–º Object
// (–ß—Ç–æ–± —Å–ª—É—á–∞–π–Ω–æ –Ω–µ —Å–ª–æ–º–∞—Ç—å —Ç–µ—Ä–∞–±–∞–π—Ç–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –∫–æ–¥–æ–º)
//

// –ù–∞–ø—Ä–∏–º–µ—Ä –µ—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏–π –º–∞–Ω–∏–ø—É–ª–∏—Ä—É—é—Ç –æ–¥–Ω–∏ –∏ —Ç–µ–º –∂–µ –æ–±—å–µ–∫—Ç–æ–º

// const newPassport = function (person) {
//   person.passport = Math.trunc(Math.random() * 1000000);
// };

// newPassport(eliasz);
// checkIn(fly, eliasz);

// console.log(fly, eliasz);

//
////////////////////////////////////////////////////////
//////////////////////////////////////////////////////// First-class function / Higher-Order Function
////////////////////////////////////////////////////////

// JavaScript treats function as first-class-citizen -
// First class citizen –∑–Ω–∞—á–∏—Ç —á—Ç–æ —è–∑—ã–∫ JS —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç function –∫–∞–∫ variabl/value
// X—Ç–æ –µ–µ –º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω—è—Ç—å –≤ Object/Array/ –ø–µ—Ä–µ–¥–æ–≤–∞—Ç—å –µ–µ –≤ –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞

// This mean function just a value

// Function is just anouret 'Type of object'
// –ò–∑–∑–∞ —Ç–æ–≥–æ —á—Ç–æ Function —è–≤–ª—è–µ—Ç—å—Å—è —É—â–µ –æ–±–Ω–∏–º –æ–±—å–µ–∫—Ç–æ–º –¥–ª—è –Ω–µ–µ —Ç–æ–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç Method (.bind)

//
////////////////////////////
//////////////////////////// Higher-Order Function
////////////////////////////
//
//
// –ë–ª–∞–≥–æ–¥–∞—Ä—è First-Class-Citizen

// –ú—ã –º–æ–∂–µ–º –ø–∏—Å–∞—Ç—å Higher-Order Function
// –§—É–Ω–∫—Ü–∏–∏ –∫–æ—Ç–æ—Ä—ã–µ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤ –∫–∞—á–∞—Å—Ç–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π

// .addEventLister

//
////////////////////////////////////////////////////////
//////////////////////////////////////////////////////// CallBack Function
////////////////////////////////////////////////////////
//

// const oneWord = function (str) {
//   return str.replaceAll(' ', '').toLowerCase();
// };

// const uppFirstWord = function (str) {
//   const [first, ...last] = str.split(' ');
//   return [first.toUpperCase(), ...last].join(' ');
// };

// // higer order function
// const transform = function (str, fn) {
//   console.log(`Orininal string : ${str}`);
//   console.log(`Transform srting : ${fn(str)}`);

//   console.log(`Transform by : ${fn.name} `); //.name - Function METHOD –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â—è–µ—Ç –∏–º—è —Ñ—É–Ω–∫—Ü–∏–∏
// };

// //
// transform('JavaScript is cool', uppFirstWord);

// //
// transform('JavaScript is cool', oneWord);

// addEventListnere call the outher function –ø–æ—Ç–æ–º—É —á—Ç–æ –≤ JS –≤—É–Ω–∫—Ü–∏–∏ –∏–º–µ—é—Ç —Å—Ç–∞—Ç—É—Å Higer-Class Citizen
//

// const lov = function () {
//   console.log('‚ù§Ô∏è');
// };
// document.body.addEventListener('click', lov); //Hieght Order Function

// Higer-Class Citizen , JS do the call-back all the time
// –∏ –±–ª—è–≥–æ–¥–æ—Ä—è Higer-Class Citizen –∏ –ü–æ—Å—Ç–æ—è–Ω–Ω–æ–º—É call-back –ø–æ—è–≤–ª—è–µ—Ç—å—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å ABSTRACTION(–ê–±—Å—Ç—Ä–∞–∫—Ü–∏–∏)

//

//
////////////////////////////////////////////////////////
//////////////////////////////////////////////////////// Function Reterning Function
////////////////////////////////////////////////////////
//

// const greet = function (greeting) {
//   return function (name) {
//     console.log(`${greeting} ${name}`);
//   };
// };

// –¢–æ—á–Ω–æ —Ç–∞–∫ –¥–µ —Ç–æ–ª—å–∫–æ —Ç–µ–ø–µ—Ä—å —Å - ARROW FUNCTION RETERN FUNCTION (challenge)
// const greet = greeting => name => console.log(`${greeting} , ${name}`);
// //

// const greeting = greet('Hey'); //–ó–¥–µ—Å—å –º—ã –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é property function

// greeting('Eli'); //–ó–¥–µ—Å—å –º—ã —É–∂–µ –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫–æ –≤—Ç–æ—Ä–æ–π —á–∞—Å—Ç–∏ FUNCTION

// // –¢–∞–∫ –∂–µ —ç—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—ã
// greet('Fofki')('Duda'); // –≤ –ø–µ—Ä–≤–æ–π —Å–∫–æ–±–∫–∞—Ö –¥–ª—è –ø–µ—Ä–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –≤–æ –≤—Ç–æ—Ä—ã—Ö –¥–ª—è –≤—Ç–æ—Ä–æ–π —Ñ—É–Ω–∫—Ü–∏–∏

// Functional Programming

// Clousure -

//
////////////////////////////////////////////////////////
//////////////////////////////////////////////////////// CALL and APPLY (Methods)
////////////////////////////////////////////////////////
//

//
// .Call(ObjectName, propertis1, proprety2)

// const ryinair = {
//   airline: 'ryinair',
//   iaitCODE: 'RN',
//   booking: [],
//   book(flyNumber, name) {
//     console.log(`${name} book a seat ${this.iaitCODE}${flyNumber} `);
//   },
// };

// ryinair.book(445, 'Eliasz');

// const gownoLet = {
//   airline: 'gownoLet',
//   iaitCODE: 'GL',
//   booking: [],
//   book(flyNumber, name) {
//     console.log(`${name} book a seat ${this.iaitCODE}${flyNumber} `);
//     this.booking.push(`flyNumber :${this.iaitCODE}${flyNumber} , ${name}`);
//   },
// };

// //
// // .Call(ObjectName, propertis1, proprety2)
// //
// // .call - –ø—Ä–∏–Ω–µ–º–∞–µ—Ç –≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∏–º—è –º–∞—Å—Å–∏–≤–∞ –∏ –ø—Ä–æ–ø–µ—Ä—Ç—ã –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏
// const luftHANDZ = {
//   airline: 'luftHANDZ',
//   iaitCODE: 'HZ',
//   booking: [],
// };

// const book = gownoLet.book; // –í —ç—Ç–æ–º —Å–ª—É—á–∏–∏ book –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç—å—Å—è –º–µ–¥–æ–¥–æ–º –∞ –æ–±—ã—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏–µ

// book.call(luftHANDZ, 453, 'Hoiuk');
// console.log(luftHANDZ);

//
// .Apply(ObjectName , ARRAY-DATA)
// –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º ES6 –Ω–∏–∫—Ç–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å .apply (–ø–æ—Å–ª–µ –ø–æ—è–≤–ª–µ–Ω–∏—è Distraktoring)
// ---------------------------------------------------------------------------------------
// .apply - –ø—Ä–∏–Ω–µ–º–∞–µ—Ç –≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –≤ –≤–∏–¥–µ –º–∞—Å—Å–∏–≤–∞

//
//
// ES6 - .call() + destructoring
// /////////////////////////////////////////////////////////////
// –í —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ JS –Ω–∏–∫—Ç–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç .apply
// –¢–∞–∫ –∫–∞–∫ –µ—Å—Ç –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–µ –≤ –º–µ—Å—Ç–µ —Å .Call() –µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –º–∞—Å—Å–∏–≤–µ

//
// .bind() - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–ø–∏–º—ã–≤–∞–µ—Ç this. –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–¥–∞–Ω–Ω—ã—Ö –≤ —Ñ—É–Ω–∫—Ü–∏–∏ —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞—Ç—å –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—å–µ–∫—Ç–∞ –∑–∞ –ø—Ä–∏–¥–µ–ª–∞–º–∏ –µ–≥–æ —Å–∞–º–æ–≥–æ

// –¢–∞–∫ –¥–µ .bind —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –∞ –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç –µ–µ –≤ –º–µ—Å—Ç–µ –≥–¥–µ –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ—Ç—å—Å—è —ç—Ç–æ—Ç METHOD

// const bindFunctionHZ = book.bind(luftHANDZ);
// bindFunctionHZ(23, 'ZopaPopa');

// //
// //–ù–∞–ø—Ä–∏–º–µ—Ä –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å —É–∂–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
// const bindFFly4 = book.bind(luftHANDZ, 456);
// bindFFly4('Rura');
// bindFFly4('Bobunda');
//
//
///////////////////////////////////////////////////////////////////// .bind + Event Lisner
//
//
// luftHANDZ.plane = 300;
// luftHANDZ.buyPlane = function () {
//   console.log(this);

//   this.plane++;
//   console.log(this.plane);
// };

// luftHANDZ.buyPlane();

// document
//   .querySelector('.buy')
//   .addEventListener('click', luftHANDZ.buyPlane.bind(luftHANDZ));

// // Parcial application
// // –°—É—Ç—å –≤ —Ç–æ–º —á—Ç–æ –º—ã —Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–æ–ª—å–∫–æ —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –Ω–µ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞—è –æ—Å–Ω–∞–≤–Ω—É—é —Ñ—É–Ω–∫–∏—Ü—é
// const addTax = (rate, value) => value + value * rate;
// // console.log(addTax(0.2, 40000));

// // const addVAT = addTax.bind(null, 0.23); //–°–¥–µ—Å—å –º—ã –∑–∞–¥–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä

// // console.log(addVAT(100000)); //–ò –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –º—ã –º–æ–∂–µ–º —Ä–∞–±–æ–∞—Ç—Ç—å —É–∂–µ —Å —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –¥—Ä—É–≥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏–µ –Ω–µ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞—è –æ—Å–Ω–∞–≤–Ω—É—é

// // Challenge (–ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≤ Reterning function)
// const addTaxR = function (rate) {
//   return function (value) {
//     return value + value * rate;
//   };
// };

// const addTAX = addTaxR(0.2);
// const addVAT = addTaxR(0.23);

// console.log(addTAX(44135));
// console.log(addVAT(44135));

//
//
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//CHALLENG #1

// const poll = {
//   quiestion: 'What is youre favorite programming languiech',
//   option: ['0: JavaScript', '1: Python', '2: Rust', '3: C++'],
//   ansver: new Array(4).fill(0),

//   registerNewAnswer: function () {
//     const promtQ = Number(
//       prompt(
//         `${this.quiestion} \n${this.option[0]} \n${this.option[1]} \n${this.option[2]}\n${this.option[3]}  \n(Wright youre ansver)`
//       )
//     );

//     // if (promtQ == 'resolt') {
//     //   document.getElementById(
//     //     'p1'
//     //   ).textContent = `Poll results are ${this.ansver.join(',')}`;
//     // }

//     typeof promtQ === 'number' &&
//       promtQ < this.ansver.length &&
//       this.ansver[promtQ]++;
//     document.getElementById(
//       'p1'
//     ).textContent = `Poll results are ${this.ansver.join(',')}`;

//     console.log(poll.ansver);
//   },
// };

// const promtOUT = poll.registerNewAnswer;

// document.querySelector('.poll').addEventListener('click', promtOUT.bind(poll));

// const [a, b, c, d] = [...poll.option];

// const promtAnsver = prompt(
//   `${poll.quiestion} \n${a} \n${b} \n${c}\n${d}  \n(Wright youre ansver)`
// );

// poll.registerNewAnswer.call({ ansver: [1, 5, 3, 9, 6, 1] });

//
//
/////////////////////////////////////////////////////////
// –ù–ê–ü–û–ú–ò–ù–ê–ù–ò–ï
// .bind(ObjectName) - –æ–Ω –ø—Ä–∏–≤—è–∑—ã–≤–µ—Ç this –∫ —Ç–æ–º—É –æ–±—å–µ–∫—Ç—É –∫ –∫–æ—Ç–æ—Ä–æ–º—É —É–∫–∞–∑—ã–≤–∞—é—Ç –≤ —Å–∫–æ–±–∫–∞—Ö
// .call()
//
// –ü–û–í–¢–û–†–ò–¢–¨ string METHOD
/////////////////////////////////////////////////////////
//
//

//
////////////////////////////////////////////////////////
//////////////////////////////////////////////////////// Immediately invoking Function
////////////////////////////////////////////////////////
//

// –ò–Ω–æ–≥–¥–∞ –Ω—É–∂–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –±—É–ª–µ—Ç –ø—Ä–∏–º–µ–Ω—è—Ç—å—Å—è —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –∞ –∑–∞—Ç–µ–º "–∏—Å–ø–æ—Ä—è—Ç—å—Å—è" –ø–æ—Å–ª–µ —Ç–æ–≥–æ —Ç–∞–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–µ —Ä–∞–∑

// IIFE - immedietly invoking function Expression

// IIFE - –¥–µ–ª–∞–ª–∏ –∫–æ–≥–¥–∞ —Ç–æ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å DATA Privecy
// (function () {
//   console.log(`This function EXPRETION is never run again`);
//   const isPrivet = 22; //–ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è - –ó–∞—â–∏—Ç–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
// })();
// // OR
// (() => console.log(`This function ARROW ALSO is never run again`))();

// // Modern WAY
// //
// // –í —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º JS  –º—ã —Å–æ–∑–¥–∞–µ–º SCOPE –¥–ª—è DATA Privice ‚¨áÔ∏è
// {
//   const isPrivet = 22; //–ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è - –ó–∞—â–∏—Ç–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
//   let this_is_Privet = 23;
//   var this_is_Privet_NOT = 23; // –Ω–æ —Å var –Ω–µ —Ä—Å–∞–±–æ—Ç–∞–µ—Ç —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—å—Å—è —Å —Ä–∞–∑—É –≤ Global Scope
// }
// console.log(this_is_Privet_NOT);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//
////////////////////////////////////////////////////////
//////////////////////////////////////////////////////// Clouseru
////////////////////////////////////////////////////////
//
// Clouser (–ó–∞–º—ã–∫–∞–Ω–∏–µ) - —ç—Ç–æ –º–µ—Ö–∞–Ω–∏–∑, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –º–∞–Ω–∏–ø—É–ª–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–º–∏ –≤–æ –≤–Ω–µ—à–Ω–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∞ –∑–∞—Ç–µ–º –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é

// –ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –±–æ–ª–µ–µ –ø–æ–Ω—è—Ç–Ω—ã–º,
// –º—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ–º —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ –±–ª–∞–≥–æ–¥–∞—Ä—è –∑–∞–º—ã–∫–∞–Ω–∏—é
// —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ —Ç–µ—Ä—è–µ—Ç —Å–≤—è–∑—å —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏,
// –∫–æ—Ç–æ—Ä—ã–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–∏ –≤ –º–µ—Å—Ç–µ –µ—ë —Å–æ–∑–¥–∞–Ω–∏—è.

// üö∂üèº‚Äç‚ôÇÔ∏è- function üéí-closure üìù-function
// So in this analogy, a function has a backpack,
// which it carries around wherever it goes.
// And this backpack contains all the variables
// that were present in the environment
// in which the function was created.

// üö∂üèº‚Äç‚ôÇÔ∏è- function üéí-closure üìù-function
// –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –ø–æ —ç—Ç–æ–π –∞–Ω–∞–ª–æ–≥–∏–∏, —Ñ—É–Ω–∫—Ü–∏—è –∏–º–µ–µ—Ç —Ä—é–∫–∑–∞–∫,
// –∫–æ—Ç–æ—Ä—ã–π –æ–Ω–∞ –Ω–æ—Å–∏—Ç —Å —Å–æ–±–æ–π, –∫—É–¥–∞ –±—ã –æ–Ω–∞ –Ω–∏ –ø–æ—à–ª–∞.
// –ò –≤ —ç—Ç–æ–º —Ä—é–∫–∑–∞–∫–µ —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ,
// –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª–∏ –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏,
// –≤ –∫–æ—Ç–æ—Ä–æ–º —Ñ—É–Ω–∫—Ü–∏—è –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞.

// const passeger = function () {
//   let pass = 0;

//   return function () {
//     pass++;
//     console.log(` ${pass}`);
//   };
// };

// const calcPass = passeger(); //–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –ø–µ—Ä–≤–æ–≥–æ Function SCOPE –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π calcPass

// calcPass(); //–ê –∑–¥–µ—Å—å –º—ã –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏ –º–∞–Ω–∏–ø—É–ª–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏–∑ –ø–µ—Ä–≤–æ–π Function SCOPE
// calcPass();
// calcPass();

// console.dir(calcPass);

// ////////////////////////////////////////////////////////

// // Example 1
// let f;
// const g = function () {
//   const a = 23;

//   f = function () {
//     console.log(a * 2);
//   };
// };

// const h = function () {
//   const b = 999;

//   f = function () {
//     console.log(b * 2);
//   };
// };

// g();
// f();

// // Re-assignint f() function

// h();
// f();

// console.dir(f);

// // Example 2
// const boardingPassenger = function (n, wait) {
//   // const bording = n / 3;

//   setTimeout(function () {
//     console.log(`We are now bording ${n} passenger`);
//     console.log(`Now it's a ${bording} of 3 group`);
//   }, wait * 1000);

//   console.log(`we start boarding at ${wait} second`);
// };

// // –ù–∞–≥–ª—è–¥–Ω–æ–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ —Ç–æ–≥–æ —á—Ç–æ

// // –í–Ω—É—Ç—Ä–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è setTimeout() –∏–º–µ–µ—Ç –ø—Ä–∏–µ–º—É–∑–µ—Å—Ç–≤–∞ –Ω–∞–¥ SCOPE —Ñ—É–Ω–∫—Ü–∏–∏ boardingPassenger()
// // B –±–µ—Ä–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ Global Scoup
// const bording = 1000;
// boardingPassenger(180, 3);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Challeng 2

(function () {
  const header = document.querySelector('h1');
  header.style.color = 'red';

  document.querySelector('body').addEventListener('click', function () {
    header.style.color = 'blue';
  });
})();
